{"remainingRequest":"C:\\Users\\Michael\\VSCodeProjects\\mern-stack-starter-pack\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!C:\\Users\\Michael\\VSCodeProjects\\mern-stack-starter-pack\\node_modules\\eslint-loader\\index.js!C:\\Users\\Michael\\VSCodeProjects\\mern-stack-starter-pack\\src\\backend\\libs\\helper.js","dependencies":[{"path":"C:\\Users\\Michael\\VSCodeProjects\\mern-stack-starter-pack\\src\\backend\\libs\\helper.js","mtime":1544214449424},{"path":"C:\\Users\\Michael\\VSCodeProjects\\mern-stack-starter-pack\\.babelrc","mtime":1544156724433},{"path":"C:\\Users\\Michael\\VSCodeProjects\\mern-stack-starter-pack\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Michael\\VSCodeProjects\\mern-stack-starter-pack\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Michael\\VSCodeProjects\\mern-stack-starter-pack\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nvar Logger = function Logger() {\n  return function (req, res, next) {\n    var timestamp = new Date();\n    var ms = timestamp.getMilliseconds();\n    console.log(\"Logs:: \".concat(req.protocol, \" \").concat(req.method, \" - '\").concat(req.originalUrl, \"' | statusCode: \").concat(res.statusCode, \" | \").concat(ms, \" ms -- \").concat(timestamp.toLocaleTimeString()));\n    next();\n  };\n};\n\nvar ErrorHandler = function ErrorHandler() {\n  if (process.env.NODE_ENV === 'production') {\n    return function (error, req, res, next) {\n      if (res.headersSent) {\n        return next(error);\n      }\n\n      res.status(500).send(error.message); // error.message outputs a specific error\n    };\n  }\n\n  if (process.env.NODE_ENV === 'development') {\n    return function (error, req, res, next) {\n      // error.message outputs a specific error &  error.stack is used for more details in error\n      // statusCode 500 is Server Error\n      if (res.headersSent) {\n        return next(error);\n      }\n\n      res.status(500).send(\"\".concat(error.message, \"\\n\").concat(error.stack));\n      console.error(\"PATH: \".concat(req.originalUrl, \" Error: \").concat(error.message));\n    };\n  }\n};\n\nvar NormalizePort = function NormalizePort(port) {\n  if (typeof port !== 'number') {\n    return parseInt(port, 10);\n  } else {\n    return port;\n  }\n};\n\nvar asyncWrapper = function asyncWrapper(fn) {\n  return function (req, res, next) {\n    Promise.resolve(fn(req, res, next)).catch(next);\n  };\n};\n\nexport { Logger, ErrorHandler, NormalizePort, asyncWrapper };\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Logger, \"Logger\", \"C:\\\\Users\\\\Michael\\\\VSCodeProjects\\\\mern-stack-starter-pack\\\\src\\\\backend\\\\libs\\\\helper.js\");\n  reactHotLoader.register(ErrorHandler, \"ErrorHandler\", \"C:\\\\Users\\\\Michael\\\\VSCodeProjects\\\\mern-stack-starter-pack\\\\src\\\\backend\\\\libs\\\\helper.js\");\n  reactHotLoader.register(NormalizePort, \"NormalizePort\", \"C:\\\\Users\\\\Michael\\\\VSCodeProjects\\\\mern-stack-starter-pack\\\\src\\\\backend\\\\libs\\\\helper.js\");\n  reactHotLoader.register(asyncWrapper, \"asyncWrapper\", \"C:\\\\Users\\\\Michael\\\\VSCodeProjects\\\\mern-stack-starter-pack\\\\src\\\\backend\\\\libs\\\\helper.js\");\n  leaveModule(module);\n})();\n\n;",null]}