{"remainingRequest":"C:\\Users\\Michael\\VSCodeProjects\\mern-stack-starter-pack\\node_modules\\babel-loader\\lib\\index.js??ref--4-1!C:\\Users\\Michael\\VSCodeProjects\\mern-stack-starter-pack\\node_modules\\eslint-loader\\index.js!C:\\Users\\Michael\\VSCodeProjects\\mern-stack-starter-pack\\src\\ReduxStateManagement\\Store.js","dependencies":[{"path":"C:\\Users\\Michael\\VSCodeProjects\\mern-stack-starter-pack\\src\\ReduxStateManagement\\Store.js","mtime":1544308158711},{"path":"C:\\Users\\Michael\\VSCodeProjects\\mern-stack-starter-pack\\.babelrc","mtime":1544156724433},{"path":"C:\\Users\\Michael\\VSCodeProjects\\mern-stack-starter-pack\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Michael\\VSCodeProjects\\mern-stack-starter-pack\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Michael\\VSCodeProjects\\mern-stack-starter-pack\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport { createStore, combineReducers } from 'redux'; // import reducers\n\nimport { ButtonCounterReducer } from './Reducers/ButtonCounterReducer'; // combine reducers here\n\nvar reducers = combineReducers({\n  buttonCounter: ButtonCounterReducer\n});\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\nvar preloadedState = function preloadedState() {\n  if (canUseDOM) {\n    return window.__PRELOADED_STATE__;\n  }\n}; // Allow the passed state to be garbage-collected\n// if (canUseDOM) {\n// \tdelete window.__PRELOADED_STATE__;\n// }\n// create store\n\n\nvar _default = function _default() {\n  return createStore(reducers, preloadedState()); // second argument is optional\n};\n\nexport default _default; // export default () => {\n// \treturn createStore(reducers, window.__PRELOADED_STATE__, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()); // second argument is optional\n// };\n\n/**\r\n * createStore(reducer, [preloadedState], [enhancer])\r\n * reducer (Function): A reducing function that returns the next state tree, given the current state tree\r\n *  and an action to handle.\r\n\r\n* [preloadedState] (any): The initial state. You may optionally specify it to hydrate the state from\r\nthe server in universal apps, or to restore a previously serialized user session. If you produced\r\nreducer with combineReducers, this must be a plain object with the same shape as the keys\r\npassed to it. Otherwise, you are * * free to pass anything that your reducer can understand.\r\n\r\n* [enhancer] (Function): The store enhancer. You may optionally specify it to enhance the store\r\nwith third-party capabilities such as middleware, time travel, persistence, etc. The only store\r\nenhancer that ships with Redux is applyMiddleware().\r\n */\n\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(reducers, \"reducers\", \"C:\\\\Users\\\\Michael\\\\VSCodeProjects\\\\mern-stack-starter-pack\\\\src\\\\ReduxStateManagement\\\\Store.js\");\n  reactHotLoader.register(canUseDOM, \"canUseDOM\", \"C:\\\\Users\\\\Michael\\\\VSCodeProjects\\\\mern-stack-starter-pack\\\\src\\\\ReduxStateManagement\\\\Store.js\");\n  reactHotLoader.register(preloadedState, \"preloadedState\", \"C:\\\\Users\\\\Michael\\\\VSCodeProjects\\\\mern-stack-starter-pack\\\\src\\\\ReduxStateManagement\\\\Store.js\");\n  reactHotLoader.register(_default, \"default\", \"C:\\\\Users\\\\Michael\\\\VSCodeProjects\\\\mern-stack-starter-pack\\\\src\\\\ReduxStateManagement\\\\Store.js\");\n  leaveModule(module);\n})();\n\n;",null]}